package greetings

import (
	"errors"
	"fmt"
	"math/rand"
	"time"
)

// Hello returns a greeting that embeds the name in the message
func Hello(name string) (string, error) {
	//if no name was given, return an error with a message
	if name == "" {
		return "", errors.New("empty name")
	}
	// Use the fmt package's Sprintf function to create a greeting message.
	// Sprintf substitutes the name parameter's value in the %v format verb.
	message := fmt.Sprintf(randomFormat(), name)
	return message, nil
}

// sets tnitial values for the variables used in the function
func init() {
	// Random numbers are generated by a Source.
	// Seed uses the provided seed value to initialize the default Source to a deterministic state.
	rand.Seed(time.Now().UnixNano())
}

//returns a random greeting from the set of greetings
func randomFormat() string {
	formats := []string{
		"Hi, %v. Welcome!",
		"Great to see you, %v!",
		"Hail, %v! Well met!",
	}
	return formats[rand.Intn(len(formats))]
}
